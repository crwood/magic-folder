# SHA1:f26cd6cf217c168240cc1667bc1cbcf08a4e0d99
#
# This file is autogenerated by pip-compile-multi
# To update, run:
#
#    pip-compile-multi
#
-r test.txt
configparser==4.0.2 ; python_version < "3.0" --hash=sha256:254c1d9c79f60c45dfde850850883d5aaa7f19a23f13561243a050d5a7c3fe4c --hash=sha256:c7d282687a5308319bf3d2e7706e575c635b0a470342641c93bea0ea3b5331df
# via
#   -r base.in
#   flake8
#   importlib-metadata
# via twisted
# via
#   importlib-metadata
#   importlib-resources
#   zipp
# via -r test.in
# via
#   -r base.in
#   autobahn
#   pyopenssl
#   service-identity
#   tahoe-lafs
#   twisted
#   txtorcon
# via pytest-twisted
# via virtualenv
# via tahoe-lafs
# via
#   -r base.in
#   tahoe-lafs
# via
#   cryptography
#   flake8
#   hypothesis
#   klein
# via
#   python-subunit
#   testtools
# via
#   tox
#   virtualenv
# via
#   -r test.in
#   testtools
# via -r test.in
# via
#   -r test.in
#   flake8-future-import
# via tahoe-lafs
# via
#   mock
#   pytest
# via flake8
# via tahoe-lafs
# via pytest-twisted
# via
#   magic-wormhole
#   spake2
# via magic-wormhole
# via
#   -r base.in
#   klein
#   treq
#   twisted
# via -r test.in
# via
#   hyperlink
#   requests
#   twisted
# via
#   backports.entry-points-selectable
#   flake8
#   pluggy
#   pytest
#   tox
#   virtualenv
# via virtualenv
# via
#   klein
#   towncrier
#   treq
#   twisted
#   txtorcon
# via
#   cryptography
#   service-identity
#   txtorcon
# via towncrier
# via -r base.in
# via traceback2
# via tahoe-lafs
# via jinja2
# via flake8
# via -r test.in
# via pytest
# via tahoe-lafs
# via
#   pytest
#   tox
#   wheel
# via
#   importlib-metadata
#   importlib-resources
#   pytest
#   virtualenv
# via
#   fixtures
#   testtools
# via virtualenv
# via
#   pytest
#   tox
# via -r test.in
# via
#   pytest
#   tox
# via service-identity
# via
#   pyasn1-modules
#   service-identity
#   twisted
# via flake8
# via cffi
# via flake8
# via twisted
# via magic-wormhole
# via
#   foolscap
#   twisted
# via packaging
# via
#   eliot
#   tahoe-lafs
# via -r test.in
# via -r test.in
# via
#   -r test.in
#   pytest-lazy-fixture
#   pytest-twisted
# via testtools
python-subunit==1.4.0 \
    --hash=sha256:042039928120fbf392e8c983d60f3d8ae1b88f90a9f8fd7188ddd9c26cad1e48 \
    --hash=sha256:40f34660c3da3e513cf2e59498a87ef04ebe2b5fe144fa25d476e1f888b19659
# via subunitreporter
# via
#   -r base.in
#   tahoe-lafs
# via
#   -r base.in
#   tahoe-lafs
# via treq
# via pathlib2
# via twisted
# via importlib-resources
# via
#   -r base.in
#   autobahn
#   automat
#   bcrypt
#   cryptography
#   eliot
#   fixtures
#   klein
#   magic-wormhole
#   mock
#   more-itertools
#   pathlib2
#   pyhamcrest
#   pynacl
#   pyopenssl
#   pyrsistent
#   pytest
#   service-identity
#   singledispatch
#   tahoe-lafs
#   testtools
#   tox
#   treq
#   tubes
#   txaio
#   unittest2
#   virtualenv
# via hypothesis
# via magic-wormhole
subunitreporter==19.3.2 \
    --hash=sha256:951e6c032dd4f90467a573c8ab04b01bff82f90af52272a224e674e3b4f59c15 \
    --hash=sha256:d67ae28eaf4dbfe6f488158c9c76bfaaa506b1956e8d13ecb568580acbbdb56d
# via -r tox.in
# via -r base.in
# via
#   -r test.in
#   fixtures
#   python-subunit
#   subunitreporter
# via
#   towncrier
#   tox
# via -r test.in
# via -r test.in
# via magic-wormhole
# via
#   testtools
#   unittest2
# via -r base.in
# via klein
# via
#   autobahn
#   foolscap
#   klein
#   magic-wormhole
#   nevow
#   subunitreporter
#   tahoe-lafs
#   treq
#   tubes
#   txtorcon
# via autobahn
# via magic-wormhole
# via
#   flake8
#   hyperlink
#   importlib-resources
#   klein
# via testtools
# via requests
# via tox
# via pytest
# via klein
wheel==0.35.0 \
    --hash=sha256:625e645aae0706ad09690bded523196a065fbcf9afcdb2d713b59e01ef8699c0 \
    --hash=sha256:64a0d73747636637479b8b8741f9304bee7a568c80e4029eeb9529ef134b471d
# via -r tox.in
# via tahoe-lafs
# via
#   importlib-metadata
#   importlib-resources
# via
#   -r base.in
#   autobahn
#   eliot
#   klein
#   subunitreporter
#   tahoe-lafs
#   twisted
#   txtorcon

# WARNING: The following packages were not pinned, but pip requires them to be
# pinned when the requirements file includes hashes. Consider using the --allow-unsafe flag.
# pip
# setuptools
